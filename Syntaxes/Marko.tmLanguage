<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>marko</string>
	</array>
	<key>name</key>
	<string>Marko</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comment-concise</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment-html</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#html-block-concise</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#html-line-concise</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#cdata</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#doctype</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#tag-script-concise</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#tag-style-concise</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#tag-concise</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#tag-html</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#placeholder</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#scriptlet</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>attr-stuff</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\s[\[]</string>
					<key>end</key>
					<string>[\]]</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#attr-stuff</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.marko-attribute</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\s(for|if|else-if|w-[a-zA-Z0-9:_-]+|marko-[a-zA-Z0-9:_.-]+lasso-[a-zA-Z0-9:_.-]+)(?=(\s|$|&gt;|/&gt;))</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.other.attribute-name.html</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\s([a-zA-Z0-9:_.][a-zA-Z0-9:_.-]*)</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.key-value.html</string>
						</dict>
					</dict>
					<key>match</key>
					<string>[=]</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-common</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-operator-no-gt</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#placeholder</string>
				</dict>
			</array>
		</dict>
		<key>cdata</key>
		<dict>
			<key>begin</key>
			<string>&lt;!\[CDATA\[</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.xml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>]]&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.xml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.unquoted.cdata.xml</string>
		</dict>
		<key>comment-concise</key>
		<dict>
			<key>begin</key>
			<string>^(\s*)//</string>
			<key>comment</key>
			<string>Single line comment (concise)</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.line.double-slash.marko</string>
		</dict>
		<key>comment-html</key>
		<dict>
			<key>begin</key>
			<string>\s*&lt;!--</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.html</string>
				</dict>
			</dict>
			<key>end</key>
			<string>--&gt;</string>
			<key>name</key>
			<string>comment.block.html</string>
		</dict>
		<key>doctype</key>
		<dict>
			<key>begin</key>
			<string>&lt;!</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.html</string>
				</dict>
			</dict>
			<key>end</key>
			<string>&gt;</string>
			<key>name</key>
			<string>meta.tag.sgml.html</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i:DOCTYPE)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.doctype.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=&gt;)</string>
					<key>name</key>
					<string>meta.tag.sgml.doctype.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>"[^"&gt;]*"</string>
							<key>name</key>
							<string>string.quoted.double.doctype.identifiers-and-DTDs.html</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>expression</key>
		<dict>
			<key>comment</key>
			<string>A JavaScript expression</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression-common</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-operator</string>
				</dict>
			</array>
		</dict>
		<key>expression-common</key>
		<dict>
			<key>comment</key>
			<string>A JavaScript expression</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression-string-single</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-string-double</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-group-parens</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-group-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-group-braces</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-constant</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-hex</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-numeric</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-special-class</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-special-operator</string>
				</dict>
			</array>
		</dict>
		<key>expression-constant</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.boolean.true.js</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.language.boolean.false.js</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.language.infinity.js</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.language.nan.js</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.language.null.js</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>constant.language.undefined.js</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(true)|(false)|(Infinity)|(NaN)|(null)|(undefined)</string>
		</dict>
		<key>expression-group-braces</key>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.curly.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.curly.js</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>expression-group-brackets</key>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.square.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.square.js</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>expression-group-parens</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.round.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.round.js</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>expression-hex</key>
		<dict>
			<key>match</key>
			<string>\b0[xX]\h+\b</string>
			<key>name</key>
			<string>constant.numeric.hex.js</string>
		</dict>
		<key>expression-numeric</key>
		<dict>
			<key>match</key>
			<string>(?x)
				(?&lt;!\w)									# Ensure word boundry
				(?&gt;
					(
						(0|[1-9][0-9]*)(\.[0-9]*)?		# 0 or 1 or 1. or 1.0
					  | \.[0-9]+						# .1
					)
					([eE][+-]?[0-9]+)?					# Exponent
				)
				(?!\w)									# Ensure word boundry
			</string>
			<key>name</key>
			<string>constant.numeric.js</string>
		</dict>
		<key>expression-operator</key>
		<dict>
			<key>match</key>
			<string>!|%|&amp;|\*|\-\-|\-|\+\+|\+|~|===|==|=|!=|!==|&lt;=|&gt;=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|&lt;&gt;|&lt;|&gt;|!|&amp;&amp;|\|\||\?\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|\^=</string>
			<key>name</key>
			<string>keyword.operator.js</string>
		</dict>
		<key>expression-operator-no-gt</key>
		<dict>
			<key>match</key>
			<string>!|%|&amp;|\*|\-\-|\-|\+\+|\+|~|===|==|=|!=|!==|&lt;=|&lt;&lt;=|&lt;&gt;|&lt;|!|&amp;&amp;|\|\||\?\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|\^=</string>
			<key>name</key>
			<string>keyword.operator.js</string>
		</dict>
		<key>expression-special-class</key>
		<dict>
			<key>match</key>
			<string>(?&lt;!\.|\$)\b(Array|Boolean|Date|Error|EvalError|Function|Number|Object|RangeError|ReferenceError|RegExp|String|SyntaxError|TypeError|URIError)\b(?!\$)</string>
			<key>name</key>
			<string>support.class.js</string>
		</dict>
		<key>expression-special-operator</key>
		<dict>
			<key>match</key>
			<string>(?&lt;!\.|\$)\b(delete|in|instanceof|new|typeof|void|with)\b(?!\$)</string>
			<key>name</key>
			<string>keyword.operator.js</string>
		</dict>
		<key>expression-string-double</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(x\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
					<key>name</key>
					<string>constant.character.escape.js</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#placeholder</string>
				</dict>
			</array>
		</dict>
		<key>expression-string-single</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(x\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
					<key>name</key>
					<string>constant.character.escape.js</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#placeholder</string>
				</dict>
			</array>
		</dict>
		<key>expression-ternary-if</key>
		<dict>
			<key>begin</key>
			<string>\?</string>
			<key>end</key>
			<string>:</string>
			<key>name</key>
			<string>meta.ternary-if.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>html-block-concise</key>
		<dict>
			<key>begin</key>
			<string>(\s*-[-]+)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\1)[.]*$</string>
			<key>name</key>
			<string>meta.section.marko-html-block</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cdata</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#placeholder</string>
				</dict>
			</array>
		</dict>
		<key>html-line-concise</key>
		<dict>
			<key>begin</key>
			<string>\s*(-)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cdata</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#placeholder</string>
				</dict>
			</array>
		</dict>
		<key>open-tag-end</key>
		<dict>
			<key>begin</key>
			<string>&gt;</string>
			<key>comment</key>
			<string>Concise style tag with CSS code.</string>
			<key>end</key>
			<string>(?=&lt;/)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cdata</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#scriptlet</string>
				</dict>
			</array>
		</dict>
		<key>open-tag-end-script</key>
		<dict>
			<key>begin</key>
			<string>&gt;</string>
			<key>comment</key>
			<string>Concise style tag with CSS code.</string>
			<key>end</key>
			<string>(?=&lt;/)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.js</string>
				</dict>
			</array>
		</dict>
		<key>open-tag-end-style</key>
		<dict>
			<key>begin</key>
			<string>&gt;</string>
			<key>comment</key>
			<string>Concise style tag with CSS code.</string>
			<key>end</key>
			<string>(?=&lt;/)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.css</string>
				</dict>
			</array>
		</dict>
		<key>placeholder</key>
		<dict>
			<key>begin</key>
			<string>[$][!]?\{</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>${ } placeholder note: should be punctuation.section.embedded.js</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>meta.section.marko-placeholder</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>scriptlet</key>
		<dict>
			<key>begin</key>
			<string>&lt;%</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.scriptlet.marko</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Scriptlet block</string>
			<key>end</key>
			<string>%&gt;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.js</string>
				</dict>
			</array>
		</dict>
		<key>self-closed-end</key>
		<dict>
			<key>begin</key>
			<string>&gt;</string>
			<key>comment</key>
			<string>Concise style tag with CSS code.</string>
			<key>end</key>
			<string>(?=&lt;/)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-custom-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-html</string>
				</dict>
			</array>
		</dict>
		<key>tag-concise</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-name-custom-concise</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-name-concise</string>
				</dict>
			</array>
		</dict>
		<key>tag-html</key>
		<dict>
			<key>comment</key>
			<string>HTML tag within the non-concise syntax</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-name-open-tag-only-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-name-script-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-name-style-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-name-shorthand-no-tag-name-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-name-shorthand-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-name-custom-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-name-html</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-concise</key>
		<dict>
			<key>begin</key>
			<string>^\s*([a-zA-Z0-9_.#-]+)(?=(\s|$|\())</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>A concise tag name</string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#html-line-concise</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-stuff</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-custom-concise</key>
		<dict>
			<key>begin</key>
			<string>^\s*(for|if|unless|else-if|else|var|assign|macro|invoke|include|app|[#.][a-zA-Z0-9_#.-]+|[a-zA-Z0-9_#.]+([:-])[a-zA-Z0-9_:-]+)(?=(\s|$|\())</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>A concise custom tag name</string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#html-line-concise</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-stuff</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-custom-html</key>
		<dict>
			<key>begin</key>
			<string>&lt;(for|if|unless|else-if|else|var|assign|macro|invoke|include|app|[a-zA-Z0-9_]+[-:][a-zA-Z0-9\-_:]+)(?=(&gt;|/&gt;|\s|\())</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.marko-tag</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>The beginning of a custom/special HTML tag</string>
			<key>end</key>
			<string>&lt;/(\1)&gt;|&lt;/&gt;|/&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.marko-tag</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#attr-stuff</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#open-tag-end</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-html</key>
		<dict>
			<key>begin</key>
			<string>&lt;([a-zA-Z0-9]+)(?=(&gt;|/&gt;|\s|\())</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>The beginning of a regular HTML tag in non-concise mode</string>
			<key>end</key>
			<string>&lt;/(\1)&gt;|&lt;/&gt;|/&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#attr-stuff</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#open-tag-end</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-open-tag-only-html</key>
		<dict>
			<key>begin</key>
			<string>&lt;(base|br|col|hr|embed|img|input|keygen|link|meta|param|source|track|wbr|lasso-img)(?=(&gt;|/&gt;|\s|\())</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>HTML tags that are open tag only</string>
			<key>end</key>
			<string>&gt;|/&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#attr-stuff</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-script-html</key>
		<dict>
			<key>begin</key>
			<string>&lt;(script)(?=(&gt;|/&gt;|\s|\())</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.script</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>HTML style tag</string>
			<key>end</key>
			<string>&lt;/(script)&gt;|&lt;/&gt;|/&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.script</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#attr-stuff</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#open-tag-end-script</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-shorthand-html</key>
		<dict>
			<key>begin</key>
			<string>&lt;(([a-zA-Z0-9_-]+)[#.][a-zA-Z0-9_#.:-]+)(?=(&gt;|/&gt;|\s|\())</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.marko-tag</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>HTML style tag</string>
			<key>end</key>
			<string>&lt;/(\1)&gt;|&lt;/(\2)&gt;|&lt;/&gt;|/&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.marko-tag</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.marko-tag</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#attr-stuff</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#open-tag-end</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-shorthand-no-tag-name-html</key>
		<dict>
			<key>begin</key>
			<string>&lt;([#.][a-zA-Z0-9_#.:-]+)(?=(&gt;|/&gt;|\s|\())</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.marko-tag</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>HTML style tag</string>
			<key>end</key>
			<string>&lt;/(\1)&gt;|&lt;/&gt;|&lt;/(div)&gt;|/&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.marko-tag</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.marko-tag</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#attr-stuff</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#open-tag-end</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-style-html</key>
		<dict>
			<key>begin</key>
			<string>&lt;(style)(?=(&gt;|/&gt;|\s|\())</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.style</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>HTML style tag</string>
			<key>end</key>
			<string>&lt;/(style)&gt;|&lt;/&gt;|/&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.style</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#attr-stuff</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#open-tag-end-style</string>
				</dict>
			</array>
		</dict>
		<key>tag-script-body-block</key>
		<dict>
			<key>begin</key>
			<string>(\s*-[-]+)</string>
			<key>comment</key>
			<string>HTML script tag with nested JavaScript code</string>
			<key>end</key>
			<string>(\1)[.]*$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.js</string>
				</dict>
			</array>
		</dict>
		<key>tag-script-body-line</key>
		<dict>
			<key>begin</key>
			<string>\s-\s</string>
			<key>comment</key>
			<string>HTML script tag with nested JavaScript code</string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.js</string>
				</dict>
			</array>
		</dict>
		<key>tag-script-concise</key>
		<dict>
			<key>begin</key>
			<string>^(\s*)(script)(?=(\s|$|\())</string>
			<key>beginCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.script.marko</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>HTML script tag with nested JavaScript code</string>
			<key>end</key>
			<string>^(?!(\1\s)|\s*$)</string>
			<key>name</key>
			<string>meta.tag.other</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#attr-stuff</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-script-body-line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-script-body-block</string>
				</dict>
			</array>
		</dict>
		<key>tag-style-body-block</key>
		<dict>
			<key>begin</key>
			<string>(\s*-[-]+)</string>
			<key>comment</key>
			<string>HTML script tag with nested JavaScript code</string>
			<key>end</key>
			<string>(\1)[.]*$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.css</string>
				</dict>
			</array>
		</dict>
		<key>tag-style-body-line</key>
		<dict>
			<key>begin</key>
			<string>\s-\s</string>
			<key>comment</key>
			<string>HTML script tag with nested JavaScript code</string>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.css</string>
				</dict>
			</array>
		</dict>
		<key>tag-style-concise</key>
		<dict>
			<key>begin</key>
			<string>^(\s*)(style)(?=(\s|$|\())</string>
			<key>beginCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.style.marko</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>style tag with CSS code.</string>
			<key>end</key>
			<string>^(?!(\1\s)|\s*$)</string>
			<key>name</key>
			<string>meta.tag.other</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#attr-stuff</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-style-body-line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-style-body-block</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>text.marko</string>
	<key>uuid</key>
	<string>BC8F1816-9AB4-4571-97E8-787F6C925E07</string>
</dict>
</plist>
